from sqlalchemy import (
    Boolean, Column, Date, DateTime, Float, Integer, String, Text, UniqueConstraint,Numeric, text
)
from sqlalchemy.ext.declarative import declarative_base
from shared_architecture.utils.time_utils import TimezoneAwareDateTime

Base = declarative_base()

class Symbol(Base):
    __tablename__ = "symbols"
    __table_args__ = (
        UniqueConstraint('instrument_key'),
        {'schema': 'tradingdb'}
    )

    # Columns that match exactly
    instrument_key = Column(String, primary_key=True)
    stock_token = Column(String)
    stock_code = Column(String)
    series = Column(String)
    aon = Column(String)
    egm = Column(String)
    agm = Column(String)
    interest = Column(String)
    bonus = Column(String)
    rights = Column(String)
    dividends = Column(String)
    remarks = Column(String)
    exchange_code = Column(String)
    product_type = Column(String)
    option_type = Column(String)
    breeze_token = Column(String)
    kite_token = Column(String)
    refresh_flag = Column(Boolean)
    first_added_datetime = Column(Date)
    symbol = Column(String)
    mfill = Column(String)
    instrument_name = Column(String, name='instrumentname')
    expiry_date = Column(Date, name='expirydate')  # Note: Date not DateTime in DB
    strike_price = Column(Numeric, name='strikeprice')
    option_type_alt = Column(String, name='optiontype')  # Different from option_type above
    ca_level = Column(String, name='calevel')
    permitted_to_trade = Column(Boolean, name='permittedtotrade')
    issue_capital = Column(Numeric, name='issuecapital')
    warning_qty = Column(Integer, name='warningqty')
    freeze_qty = Column(Integer, name='freezeqty')
    credit_rating = Column(String, name='creditrating')
    normal_market_status = Column(String, name='normalmarketstatus')
    odd_lot_market_status = Column(String, name='oddlotmarketstatus')
    spot_market_status = Column(String, name='spotmarketstatus')
    auction_market_status = Column(String, name='auctionmarketstatus')
    normal_market_eligibility = Column(String, name='normalmarketeligibility')
    odd_lot_market_eligibility = Column(String, name='oddlotmarketeligibility')
    spot_market_eligibility = Column(String, name='spotmarketeligibility')
    auction_market_eligibility = Column(String, name='auctionmarketeligibility')
    scrip_id = Column(String, name='scripid')
    issue_rate = Column(Numeric, name='issuerate')
    issue_start_date = Column(Date, name='issuestartdate')
    interest_payment_date = Column(Date, name='interestpaymentdate')
    issue_maturity_date = Column(Date, name='issuematuritydate')
    margin_percentage = Column(Numeric, name='marginpercentage')
    minimum_lot_qty = Column(Integer, name='minimumlotqty')
    lot_size = Column(Integer, name='lotsize')
    tick_size = Column(Numeric, name='ticksize')
    company_name = Column(String, name='companyname')
    listing_date = Column(Date, name='listingdate')
    expulsion_date = Column(Date, name='expulsiondate')
    readmission_date = Column(Date, name='readmissiondate')
    record_date = Column(Date, name='recorddate')
    low_price_range = Column(Numeric, name='lowpricerange')
    high_price_range = Column(Numeric, name='highpricerange')
    security_expiry_date = Column(Date, name='securityexpirydate')
    no_delivery_start_date = Column(Date, name='nodeliverystartdate')
    no_delivery_end_date = Column(Date, name='nodeliveryenddate')
    participant_in_market_index = Column(String, name='participantinmarketindex')
    book_cls_start_date = Column(Date, name='bookclsstartdate')
    book_cls_end_date = Column(Date, name='bookclsenddate')
    excercise_start_date = Column(Date, name='excercisestartdate')
    excercise_end_date = Column(Date, name='excerciseenddate')
    old_token = Column(String, name='oldtoken')
    asset_instrument = Column(String, name='assetinstrument')
    asset_name = Column(String, name='assetname')
    asset_token = Column(Integer, name='assettoken')
    intrinsic_value = Column(Numeric, name='intrinsicvalue')
    extrinsic_value = Column(Numeric, name='extrinsicvalue')
    excercise_style = Column(String, name='excercisestyle')
    ex_allowed = Column(String, name='exallowed')
    ex_rejection_allowed = Column(Boolean, name='exrejectionallowed')
    pl_allowed = Column(Boolean, name='plallowed')
    is_this_asset = Column(Boolean, name='isthisasset')
    is_corp_adjusted = Column(Boolean, name='iscorpadjusted')
    localupdatedatetime = Column(DateTime, name='localupdatedatetime')
    delete_flag = Column(Boolean, name='deleteflag')
    base_price = Column(Numeric, name='baseprice')
    exchange_code_alt = Column(String, name='exchangecode')  # Different from exchange_code above
    board_lot_qty = Column(Integer, name='boardlotqty')
    date_of_delisting = Column(Date, name='dateofdelisting')
    date_of_listing = Column(Date, name='dateoflisting')
    face_value = Column(Numeric, name='facevalue')
    freeze_percent = Column(Numeric, name='freezepercent')
    high_date = Column(Date, name='highdate')
    isin_code = Column(String, name='isincode')
    instrument_type = Column(String, name='instrumenttype')
    issue_price = Column(Numeric, name='issueprice')
    life_time_high = Column(Numeric, name='lifetimehigh')
    life_time_low = Column(Numeric, name='lifetimelow')
    low_date = Column(Date, name='lowdate')
    avm_buy_margin = Column(Numeric, name='avmbuymargin')
    avm_sell_margin = Column(Numeric, name='avmsellmargin')
    bcast_flag = Column(Boolean, name='bcastflag')
    group_name = Column(String, name='groupname')
    market_lot = Column(Integer, name='marketlot')
    nde_date = Column(Date, name='ndedate')
    nds_date = Column(Date, name='ndsdate')
    nd_flag = Column(Boolean, name='ndflag')
    scrip_code = Column(String, name='scripcode')
    scrip_name = Column(String, name='scripname')
    susp_status = Column(String, name='suspstatus')
    suspension_reason = Column(String, name='suspensionreason')
    suspension_date = Column(Date, name='suspensiondate')
    weeks_52_high = Column(Numeric, name=text('52WeeksHigh'))
    weeks_52_low = Column(Numeric, name=text('52WeeksLow'))
    short_name = Column(String, name='shortname')
